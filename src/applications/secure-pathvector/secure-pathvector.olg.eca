ECA Rule r1Eca0Ins ACTION_ADD<path(@S, D, C, P)> :- EVENT_INSERT<link(@S, D, C)>, P1 := f_append(S), P2 := f_append(D), P := f_concat(P1, P2).
ECA Rule r1Eca0Del ACTION_DELETE<path(@S, D, C, P)> :- EVENT_DELETE<link(@S, D, C)>, P1 := f_append(S), P2 := f_append(D), P := f_concat(P1, P2).
ECA Rule r2Eca0RemoteIns ACTION_ADD< encrypts S says linkD(S, @D, C)> :- EVENT_RECV< encrypts S says r2linkDsend(S, @D, C)>.
ECA Rule r2Eca0RemoteDel ACTION_DELETE< encrypts S says linkD(S, @D, C)> :- EVENT_RECV< encrypts S says linkDDelete(S, @D, C)>.
ECA Rule r2Eca0Ins ACTION_REMOTE_SEND< encrypts S says r2linkDsend(S, @D, C)> :- EVENT_INSERT<link(@S, D, C)>.
ECA Rule r2Eca0Del ACTION_REMOTE_SEND< encrypts S says linkDDelete(S, @D, C)> :- EVENT_DELETE<link(@S, D, C)>.
ECA Rule r3Eca0RemoteIns ACTION_ADD< encrypts S says path(@D, Z, C, P, S)> :- EVENT_RECV< encrypts S says r3pathsend(@D, Z, C, P, S)>.
ECA Rule r3Eca0RemoteDel ACTION_DELETE< encrypts S says path(@D, Z, C, P, S)> :- EVENT_RECV< encrypts S says pathDelete(@D, Z, C, P, S)>.
ECA Rule r3Eca0Ins ACTION_REMOTE_SEND< encrypts S says r3pathsend(@D, Z, C, P, S)> :- EVENT_INSERT< encrypts D says linkD(D, @S, C1)>, bestPath(@S, Z, C2, P2), C := C1+ C2, f_member(P2, D) == 0, P1 := f_append(D), P := f_concat(P1, P2).
ECA Rule r3Eca0Del ACTION_REMOTE_SEND< encrypts S says pathDelete(@D, Z, C, P, S)> :- EVENT_DELETE< encrypts D says linkD(D, @S, C1)>, bestPath(@S, Z, C2, P2), C := C1+ C2, f_member(P2, D) == 0, P1 := f_append(D), P := f_concat(P1, P2).
ECA Rule r3Eca1Ins ACTION_REMOTE_SEND< encrypts S says r3pathsend(@D, Z, C, P, S)> :- EVENT_INSERT<bestPath(@S, Z, C2, P2)>,  encrypts D says linkD(D, @S, C1), C := C1+ C2, f_member(P2, D) == 0, P1 := f_append(D), P := f_concat(P1, P2).
ECA Rule r3Eca1Del ACTION_REMOTE_SEND< encrypts S says pathDelete(@D, Z, C, P, S)> :- EVENT_DELETE<bestPath(@S, Z, C2, P2)>,  encrypts D says linkD(D, @S, C1), C := C1+ C2, f_member(P2, D) == 0, P1 := f_append(D), P := f_concat(P1, P2).
ECA Rule r4eca ACTION_ADD<bestPath(@S, D, MIN< C >, P)> :- EVENT_INSERT< encrypts W says path(@S, D, C, P, W)>.
ECA Rule r4eca2 ACTION_DELETE<bestPath(@S, D, MIN< C >, P)> :- EVENT_DELETE< encrypts W says path(@S, D, C, P, W)>.
