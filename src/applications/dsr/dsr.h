/* A RapidNet application. Generated by RapidNet compiler. */

#ifndef DSR_H
#define DSR_H

#include <string>
#include <iostream>
#include "ns3/ptr.h"
#include "ns3/event-id.h"
#include "ns3/ipv4-address.h"
#include "ns3/rapidnet-header.h"
#include "ns3/relation-base.h"
#include "ns3/database.h"
#include "ns3/discovery.h"
#include "ns3/aggregator.h"
#include "ns3/aggwrap.h"

using namespace std;
using namespace ns3;
using namespace ns3::rapidnet::discovery;

namespace ns3 {

class Socket;
class Packet;

namespace rapidnet {
namespace dsr {

class Dsr : public Discovery
{
public:
  static const string EBESTPATHDST;
  static const string EPATHDST;
  static const string EPATHDSTLOC;
  static const string EPATHSRC;
  static const string EQUERY;
  static const string LINK;
  static const string R23TPATHSEND;
  static const string TBESTPATH;
  static const string TBESTPATHDST;
  static const string TPATH;
  static const string TPATHDST;

  static TypeId GetTypeId (void);

  Dsr ();

  virtual ~Dsr ();

protected:

  virtual void DoDispose (void);

  virtual void StartApplication (void);

  virtual void StopApplication (void);

  virtual void InitDatabase (void);

  virtual void DemuxRecv (Ptr<Tuple> tuple);

  virtual void R11_eca (Ptr<Tuple> eQuery);

  virtual void R12_eca (Ptr<Tuple> ePathDst);

  virtual void R13_eca (Ptr<Tuple> ePathDstLoc);

  virtual void R14eca (Ptr<Tuple> tPathDst);

  virtual void R14eca2 (Ptr<Tuple> tPathDst);

  virtual void R15Eca0Ins (Ptr<Tuple> tBestPathDst);

  virtual void R16_eca (Ptr<Tuple> eBestPathDst);

  virtual void R21_eca (Ptr<Tuple> eBestPathDst);

  virtual void R22_eca (Ptr<Tuple> ePathSrc);

  virtual void R23ECAMat (Ptr<Tuple> r23tPathsend);

  virtual void R23_eca (Ptr<Tuple> ePathSrc);

  virtual void R31eca (Ptr<Tuple> tPath);

  virtual void R31eca2 (Ptr<Tuple> tPath);

  Ptr<Aggregator> m_aggr_tbestpathMinCost;
  Ptr<Aggregator> m_aggr_tbestpathdstMinCost;
};

} // namespace dsr
} // namespace rapidnet
} // namespace ns3

#endif // DSR_H
