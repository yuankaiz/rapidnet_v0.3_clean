/* A RapidNet application. Generated by RapidNet compiler. */

#ifndef SECUREPINGPONG_H
#define SECUREPINGPONG_H

#include <string>
#include <iostream>
#include "ns3/ptr.h"
#include "ns3/event-id.h"
#include "ns3/ipv4-address.h"
#include "ns3/rapidnet-header.h"
#include "ns3/relation-base.h"
#include "ns3/database.h"
#include "ns3/rapidnet-application-base.h"
#include "ns3/aggregator.h"
#include "ns3/aggwrap.h"

using namespace std;
using namespace ns3;

namespace ns3 {

class Socket;
class Packet;

namespace rapidnet {
namespace securepingpong {

class SecurePingpong : public RapidNetApplicationBase
{
public:
  static const string EPING;
  static const string EPINGPONGFINISH;
  static const string EPONG;
  static const string PERIODIC;
  static const string R1_ECAPERIODIC;
  static const string TLINK;

  static TypeId GetTypeId (void);

  SecurePingpong ();

  virtual ~SecurePingpong ();

protected:

  virtual void DoDispose (void);

  virtual void StartApplication (void);

  virtual void StopApplication (void);

  virtual void InitDatabase (void);

  virtual void DemuxRecv (Ptr<Tuple> tuple);

  virtual void R1_ecaperiodic ();

  virtual void R1_eca (Ptr<Tuple> r1_ecaperiodic);

  virtual void R2_eca (Ptr<Tuple> ePing);

  virtual void R3_eca (Ptr<Tuple> ePong);

  EventId m_event_r1_ecaperiodic;
};

} // namespace securepingpong
} // namespace rapidnet
} // namespace ns3

#endif // SECUREPINGPONG_H
