/* A RapidNet application. Generated by RapidNet compiler. */

#ifndef EMUHSLSPERIODIC_H
#define EMUHSLSPERIODIC_H

#include <string>
#include <iostream>
#include "ns3/ptr.h"
#include "ns3/event-id.h"
#include "ns3/ipv4-address.h"
#include "ns3/rapidnet-header.h"
#include "ns3/relation-base.h"
#include "ns3/database.h"
#include "ns3/rapidnet-application-base.h"
#include "ns3/aggregator.h"
#include "ns3/aggwrap.h"

using namespace std;
using namespace ns3;

namespace ns3 {

class Socket;
class Packet;

namespace rapidnet {
namespace emuhslsperiodic {

class EmuHslsPeriodic : public RapidNetApplicationBase
{
public:
  static const string APPTABLE;
  static const string ELSU;
  static const string ELSUCHANGE;
  static const string ELSUCOUNT;
  static const string ELSUFILTERED;
  static const string ELSULOC;
  static const string ELINKADD;
  static const string ELINKCOUNT;
  static const string PERIODIC;
  static const string R11_ECAPERIODIC;
  static const string R61A_ECAPERIODIC;
  static const string R61B_ECAPERIODIC;
  static const string R62A_ECAPERIODIC;
  static const string R62B_ECAPERIODIC;
  static const string R63A_ECAPERIODIC;
  static const string R63B_ECAPERIODIC;
  static const string R64A_ECAPERIODIC;
  static const string R64B_ECAPERIODIC;
  static const string TLSU;
  static const string TLINK;

  static TypeId GetTypeId (void);

  EmuHslsPeriodic ();

  virtual ~EmuHslsPeriodic ();

protected:

  virtual void DoDispose (void);

  virtual void StartApplication (void);

  virtual void StopApplication (void);

  virtual void InitDatabase (void);

  virtual void DemuxRecv (Ptr<Tuple> tuple);

  virtual void R11_ecaperiodic ();

  virtual void R11_eca (Ptr<Tuple> r11_ecaperiodic);

  virtual void R33_eca (Ptr<Tuple> eLinkAdd);

  virtual void R34_eca (Ptr<Tuple> eLinkCount);

  virtual void R35_eca (Ptr<Tuple> eLinkAdd);

  virtual void R61A_ecaperiodic ();

  virtual void R61A_eca (Ptr<Tuple> r61A_ecaperiodic);

  virtual void R61B_ecaperiodic ();

  virtual void R61B_eca (Ptr<Tuple> r61B_ecaperiodic);

  virtual void R62A_ecaperiodic ();

  virtual void R62A_eca (Ptr<Tuple> r62A_ecaperiodic);

  virtual void R62B_ecaperiodic ();

  virtual void R62B_eca (Ptr<Tuple> r62B_ecaperiodic);

  virtual void R63A_ecaperiodic ();

  virtual void R63A_eca (Ptr<Tuple> r63A_ecaperiodic);

  virtual void R63B_ecaperiodic ();

  virtual void R63B_eca (Ptr<Tuple> r63B_ecaperiodic);

  virtual void R64A_ecaperiodic ();

  virtual void R64A_eca (Ptr<Tuple> r64A_ecaperiodic);

  virtual void R64B_ecaperiodic ();

  virtual void R64B_eca (Ptr<Tuple> r64B_ecaperiodic);

  virtual void R70_eca (Ptr<Tuple> eLSU);

  virtual void RFilter_eca (Ptr<Tuple> eLSULoc);

  virtual void R71_eca (Ptr<Tuple> eLSUFiltered);

  virtual void R72_eca (Ptr<Tuple> eLSUCount);

  virtual void R73_eca (Ptr<Tuple> eLSUFiltered);

  virtual void R81Eca0Ins (Ptr<Tuple> tLSU);

  virtual void R81Eca0Ref (Ptr<Tuple> tLSU);

  virtual void R82_eca (Ptr<Tuple> eLSUChange);

  EventId m_event_r11_ecaperiodic;
  EventId m_event_r61a_ecaperiodic;
  EventId m_event_r61b_ecaperiodic;
  EventId m_event_r62a_ecaperiodic;
  EventId m_event_r62b_ecaperiodic;
  EventId m_event_r63a_ecaperiodic;
  EventId m_event_r63b_ecaperiodic;
  EventId m_event_r64a_ecaperiodic;
  EventId m_event_r64b_ecaperiodic;
};

} // namespace emuhslsperiodic
} // namespace rapidnet
} // namespace ns3

#endif // EMUHSLSPERIODIC_H
